  for (let sheetname of wb.SheetNames) {
    let data = XLSX.utils.sheet_to_json(wb.Sheets[sheetname]);

    let final = data.reduce( (acc, val )=> {
      // console.log(val);
      const {
        'Тип запроса'        : requestType,
        'Название позиции'   : positionName,
        'Город'              : city,
        'Адрес'              : adress,
        'Контактное лицо'    : contactPerson,
        'Контактный телефон' : contactPhone,
        'Центр затрат'       : costCenter,
        'Цена'               : price,
      } = val;
      // _.set(acc, requestType);
      let obj = {types: {[requestType]: {}}};
      _.set(obj, `${requestType}.${positionName}`, {
        [city]: {
          city,
          adress,
          contactPerson,
          contactPhone,
          costCenter,
          price,
        },
      });
      // console.log(obj);

      objectAssignDeep(acc, obj);
      return acc;
    }, {});

    let types=[];

    for (let [key, value] of Object.entries( final)) {
      types.push({
        products: {name: key, value},
      });
    }
    types.shift();


    types.forEach( (item, index) => {
      item.products.value = Object.entries(item.products.value).map( ([key, value])=> ({
        name: key,
        data: value,
      }));

      item.products.value.forEach((item)=> {
        item.data =  Object.values(item.data).map( (value) => ({
          ...value,
        }));
      });
    });

    if (data.length > 0) {
      await Catalog.create({name: 'AtmCheckTapeCatalog', data: types, key_list: []});
      progress++;
      log_line_progress('Progress: ' + progress + ' / ' + length);
    }
  }
